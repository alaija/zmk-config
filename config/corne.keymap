/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 * To use home rows - &hm LSHFT F
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#define QWERTY 0
#define NUMB 1
#define NAVI 2
#define ADJUST 3

&lt { quick_tap_ms = <200>; };
&mt { quick_tap_ms = <200>; };

/ {

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// .--------------------------------------------------------------.       .-----------------------------------------------------------.
// |   ESC        |    Q    |    W   |   E    |    R    |    T    |       |   Y   |    U    |    I    |    O    |     P    |    [     |
// |--------------+---------+--------+--------+---------+---------|       |-------+---------+---------+---------+----------+----------|
// |   CTRL/Tab   |    A    |    S   |   D    |    F    |    G    |       |   H   |    J    |    K    |    L    |     ;    |     '    |
// |--------------+---------+--------+--------+---------+---------|       |-------+---------+---------+---------+----------+----------|
// |   SHFT       |    Z    |    X   |   C    |    V    |    B    |       |   N   |    M    |    ,    |    .    |     /    | ` | ALT  |
// '---------------------------------+--------+---------+---------+       |-------+---------+---------+-------------------------------'
//                                   |  GUI   |   MO1   |   ENT   |       |  SPC  |   SHFT  |  BKSP   |
//                                   '--------+---------+---------'       '-------+---------+---------'
                        bindings = <
   &kp ESC         &kp Q     &kp W    &kp E     &kp R     &kp T           &kp Y      &kp U     &kp I      &kp O    &kp P     &kp LEFT_BRACKET
   &mt LCTRL TAB   &kp A     &kp S    &kp D     &kp F     &kp G           &kp H      &kp J     &kp K      &kp L    &kp SEMI  &kp SQT
   &kp LSHFT       &kp Z     &kp X    &kp C     &kp V     &kp B           &kp N      &kp M     &kp COMMA  &kp DOT  &kp FSLH  &mt RALT GRAVE
                                      &kp LGUI  &mo NUMB  &lt NAVI RET    &kp SPACE  &kp RSHFT  &kp BSPC
                        >;
                };
                
                lower_layer {
// .--------------------------------------------------------------.       .-----------------------------------------------------------.
// |   ESC        |         |    +   |   -    |    {    |    [    |       |   ]   |    }    |    =    |    _    |    |     |          |
// |--------------+---------+--------+--------+---------+---------|       |-------+---------+---------+---------+----------+----------|
// |              |    1    |    2   |   3    |    4    |    5    |       |   6   |    7    |    8    |    9    |     0    |    \     |
// |--------------+---------+--------+--------+---------+---------|       |-------+---------+---------+---------+----------+----------|
// |   SHFT       |    !    |    @   |   #    |    $    |    %    |       |   ^   |    &    |    *    |    (    |     )    |     :    |
// '---------------------------------+--------+---------+---------+       |-------+---------+---------+-------------------------------'
//                                   |  GUI   |         |   MO3   |       |   SPC  |    .    |   BKSP  |
//                                   '--------+---------+---------'       '-------+---------+---------'
                        bindings = <
   &kp ESC       &trans    &kp KP_PLUS &kp KP_MINUS &kp LEFT_BRACE &kp LEFT_BRACKET  &kp RIGHT_BRACKET        &kp RIGHT_BRACE            &kp KP_EQUAL           &kp UNDERSCORE           &kp PIPE     &trans
   &trans        &kp N1    &kp N2      &kp N3       &kp N4         &kp N5            &kp N6                   &kp N7                     &kp N8                 &kp N9                   &kp N0     &kp BSLH
   &kp LSHFT     &kp EXCL  &kp AT      &kp HASH     &kp DLLR       &kp PRCNT         &kp CARET                &kp AMPS                   &kp KP_MULTIPLY        &kp LPAR                 &kp RPAR   &kp COLON
                           &kp LGUI    &trans       &mo ADJUST     &kp SPACE         &kp DOT                &kp BSPC
                        >;
                };
                
                raise_layer {
// .----------------------------------------------------------------.       .-----------------------------------------------------------------.
// |   CMD+SHIFT+4  |       |   PU   |   UP   |    PD    |   HOME   |       |  HOME   |    PU    |    UP   |   PD    |          | CMD+SHIFT+5 |
// |----------------+-------+--------+--------+----------+----------|       |---------+----------+---------+---------+----------+-------------|
// |                |       |  LEFT  |  DOWN  |   RIGHT  |   END    |       |  END    |   LEFT   |   DOWN  |  RIGHT  |          |             |
// |----------------+-------+--------+--------+----------+----------|       |---------+----------+---------+---------+----------+-------------|
// |     OUT_TOG    |       |        |        |CMD+CTR+<-|CMD+CTR+->|       |CTRL+LEFT|CTRL+RIGHT|         |         |          |   OUT_TOG   |
// '---------------------------------+--------+----------+----------+       |---------+----------+---------+----------------------------------'
//                                   |  GUI   |   MO3    |          |       |    MO3  |          |         |
//                                   '--------+----------+----------'       '---------+----------+---------'

                        bindings = <
   &kp LG(LS(N4))  &trans     &kp PAGE_UP        &kp UP_ARROW      &kp PAGE_DOWN       &kp HOME                &kp CARET            &kp PAGE_UP             &kp UP_ARROW       &kp PAGE_DOWN      &kp HOME     &kp LG(LS(N5))
   &trans          &trans     &kp LEFT_ARROW     &kp DOWN_ARROW    &kp RIGHT_ARROW     &kp END                 &kp MINUS            &kp LEFT_ARROW          &kp DOWN_ARROW     &kp RIGHT_ARROW    &kp END      &trans
   &out OUT_TOG    &trans     &trans             &trans       &kp LG(LC(LEFT_ARROW)) &kp LG(LC(RIGHT_ARROW))     &kp LC(LEFT_ARROW)   &kp LC(RIGHT_ARROW)     &trans             &trans             &trans       &out OUT_TOG
                              &kp LGUI           &mo ADJUST        &trans              &mo ADJUST  &trans   &trans
                        >;
                };

                adjust_layer {
// .--------------------------------------------------------.       .--------------------------------------------------------------.
// |         |        |        |        |         |         |       |  VOL+  |        |         |         |          |             |
// |---------+--------+--------+--------+---------+---------|       |--------+--------+---------+---------+----------+-------------|
// |  BTCLR  |  BT1   |  BT2   |  BT3   |  BT4    |  BT5    |       |  VOL-  |        |         |         |          |             |
// |---------+--------+--------+--------+---------+---------|       |--------+--------+---------+---------+----------+-------------|
// |         |        |        |        |         |         |       |        |        |         |         |          |             |
// '---------------------------+--------+---------+---------+       |--------+--------+---------+----------------------------------'
//                             |        |         |         |       |        |        |         |
//                             '--------+---------+---------'       '--------+--------+---------'

                        bindings = <
   &reset      &trans          &trans         &trans          &trans          &trans            &kp C_VOLUME_UP    &trans &trans &trans &trans &trans
   &bt BT_CLR  &bt BT_SEL 0    &bt BT_SEL 1   &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4      &kp C_VOLUME_DOWN  &trans &trans &trans &trans &trans
   &trans      &trans          &trans         &trans          &trans          &trans            &trans             &trans &trans &trans &trans &trans
                                   &trans &trans &trans   &trans &trans &trans
                        >;
                };
        };
};
