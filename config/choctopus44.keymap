/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>


#define QWERTY 0
#define NUMB 1
#define NAVI 2
#define ADJUST 3

&lt { quick_tap_ms = <200>; };
&mt { 
    quick_tap_ms = <200>;
    tapping-term-ms = <400>;
};

/ {
  keymap {
    compatible = "zmk,keymap";


    default_layer {
      bindings = <
        &kp ESC       &kp Q     &kp W       &kp E     &kp R    &kp T                &kp Y     &kp U     &kp I      &kp O    &kp P     &kp LEFT_BRACKET
        &mt LCTRL TAB &kp A     &kp S       &kp D     &kp F    &kp G                &kp H     &kp J     &kp K      &kp L    &kp SEMI  &kp SQT
        &kp LSHFT     &kp Z     &kp X       &kp C     &kp V    &kp B   &kp C_MUTE   &kp N     &kp M     &kp COMMA  &kp DOT  &kp FSLH  &mt RALT GRAVE
                              &trans   &mo NUMB  &lt NAVI RET   &kp LGUI            &kp BSPC   &kp SPACE  &kp RSHFT   &trans
      >;
      sensor-bindings = <&inc_dec_kp UP DOWN>;
    };

    lower_layer {
      bindings = <
        &kp ESC       &trans    &kp KP_PLUS &kp KP_MINUS &kp LEFT_BRACE &kp LEFT_BRACKET  &kp RIGHT_BRACKET        &kp RIGHT_BRACE            &kp KP_EQUAL           &kp UNDERSCORE           &kp PIPE     &trans
        &trans        &kp N1    &kp N2      &kp N3       &kp N4         &kp N5            &kp N6                   &kp N7                     &kp N8                 &kp N9                   &kp N0     &kp BSLH
        &kp LSHFT     &kp EXCL  &kp AT      &kp HASH     &kp DLLR       &kp PRCNT         &kp CARET  &kp C_MUTE    &kp AMPS                   &kp KP_MULTIPLY        &kp LPAR                 &kp RPAR   &kp COLON
                                             &trans      &trans         &mo ADJUST        &mo LGUI                 &kp BSPC                   &kp SPACE              &mo ADJUST               &trans
      >;
      sensor-bindings = <&inc_dec_kp LEFT RIGHT>;
    };

    raise_layer {
      bindings = <
          &kp LG(LS(N4))  &trans     &kp PAGE_UP        &kp UP_ARROW      &kp PAGE_DOWN       &kp HOME                          &kp CARET            &kp PAGE_UP             &kp UP_ARROW       &kp PAGE_DOWN      &kp HOME     &kp LG(LS(N5))
          &trans          &trans     &kp LEFT_ARROW     &kp DOWN_ARROW    &kp RIGHT_ARROW     &kp END                           &kp MINUS            &kp LEFT_ARROW          &kp DOWN_ARROW     &kp RIGHT_ARROW    &kp END      &trans
          &out OUT_TOG    &trans     &trans             &trans       &kp LG(LC(LEFT_ARROW)) &kp LG(LC(RIGHT_ARROW)) &kp C_MUTE  &kp LC(LEFT_ARROW)   &kp LC(RIGHT_ARROW)     &trans             &trans             &trans       &out OUT_TOG
                                     &trans             &mo ADJUST         &trans            &kp LGUI                           &trans               &trans                  &mo ADJUST         &trans 
      >;
      sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
    };

    adjust_layer {
      bindings = <
        &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4    &bt BT_CLR                &none         &none         &kp PSCRN     &kp SLCK    &kp PAUSE_BREAK   &none
        &none         &none           &none           &none           &none           &none                     &none         &none         &kp INSERT    &kp HOME    &kp PG_UP         &none
        &none         &none           &none           &none           &none           &none       &kp C_MUTE    &bootloader   &kp C_RESET   &kp DEL       &kp END     &kp PG_DN         &none
                                      &trans          &trans          &trans          &trans                    &trans        &trans        &trans        &trans
      >;
      sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
    };

  };
};
